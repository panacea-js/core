{
  "core": {
    "hooks": {
      "available": "Available hooks: {output}",
      "none" : "None",
      "cannotLoadFromPath": "Could not load hooks from {resolvedPath}",
      "shouldExportObject": "Hook file {filePath} should export an object. See the Panacea hooks documentation.",
      "couldNotRegister": "Could not execute register() in hook file: {filePath}.",
      "registeredPath": "Registered hooks in {filePath}"
    },
    "formatters": {
      "shortHandToBytes": {
        "cannotConvert": ""
      }
    },
    "yaml": {
      "noDirectory": "Directory {directory} doesn't exist"
    },
    "bootstrap": {
      "completed": "Completed full bootstrap (in {completedTime}ms)",
      "pluginPathNotFound": {
        "line1": "Plugin {pluginPath} was not found as defined in panacea.js.",
        "line2": "If this is a external (contributed) plugin: Check that you have run `npm install {pluginPath}`",
        "line3": "If this plugin is part of your application: Check that it can be resolved in the <app_root>/plugins/ directory"
      },
      "pluginLoaded": "{pluginPath} plugin loaded",
      "notAllowedCORS": "Not allowed by CORS",
      "reloadGraphql": "Reloaded graphql middleware (in {timeToReplace}ms) because {reason}",
      "typeDefsError": "Server not started. Type definitions error: {error}"
    },
    "entityTypes": {
      "fields": {
        "id": {
          "label": "ID",
          "description": "A unique identifier for the entity"
        },
        "string": {
          "label": "String",
          "description": "A text string"
        },
        "password": {
          "label": "Password",
          "description": "A password (encrypted) string"
        },
        "text": {
          "label": "Long text",
          "description": "A long text string"
        },
        "float": {
          "label": "Float",
          "description": "A number with decimals"
        },
        "int": {
          "label": "Integer",
          "description": "An integer (whole number)"
        },
        "boolean": {
          "label": "Boolean",
          "description": "On/Off"
        },
        "reference": {
          "label": "Reference",
          "description": "A reference to another entity"
        },
        "object": {
          "label": "Object",
          "description": "A nested data object"
        },
        "date": {
          "label": "Date",
          "description": "An ISO8601 Date value"
        }
      },
      "revisions": {
        "label": "Revisions",
        "description": "Revisions for {entityTypeName}"
      },
      "dates": {
        "created": {
          "label": "Created",
          "description": "The datetime that the entity was created"
        },
        "updated": {
          "label": "Updated",
          "description": "The datetime that the entity was updated"
        },
        "deleted": {
          "label": "Deleted",
          "description": "The datetime that the entity was deleted"
        }
      }
    }
  }
}